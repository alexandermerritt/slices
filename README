/**
 * @file README.txt
 * @brief 
 *
 * @date Apr 12, 2011
 * @author Magda Slawinska (Magic MS), magg __at_ gatech __dot_ edu
 * @author Alex Merritt, merritt.alex@gatech.edu
 */
 
 CONTRIBUTORS
 
 This piece of software has been 'compiled' by Magic Magg (Magda Slawinska), 
 as part of the non-virtualized Keeneland standard software. 
 The software has been developed based on the software for the virtualized case
 Pegasus and Shadowfax for which credits go to:
 
 Vishakha Gupta
 Alex Merritt
 Abhishek Verma
 
Alex Merritt and Magda Slawinska ported the virtualized-based software to a
non-virtualized case. Magda's work targets supporting the actual deployment of
this codebase on large-scale GPU clusters, as well as the networking code.
Alex's work contributes to the assembly runtime, making it possible to map
applications across the cluster.
 
 
 1. DEPENDENCIES
 
 a. Scons - the build system
 
 b. Installed CUDA Toolkit for
    - libcudart.a (or something)
    - some includes cuda_runtime_api.h, __cuda_format.h
    - nvcc compiler 
  
 c. glib 
 
 	- glib-2.28.7 - developed with this version, at least requires the
 	  decent version that supports key file  	
 	  -- link with -lglib-2.0
 	  -- include directories
 	    GLIB20 + 'include/glib-2.0',
        GLIB20 + 'include/gio-unix-2.0',
        GLIB20 + 'lib/glib-2.0/include'      
 
 
 2. BUILDING
 
To produce all binaries. All flags (below) default to zero if not specified.
	scons

Build with debug output and debug symbols in binaries
	scons dbg=1

Build with timing information
	scons timing=1

To clean
	scons -c

5. KNOWN ISSUES

* Right now it doesn't support CUDA 4.0 (you can have a newer driver, but
  the support is for CUDA Tookit 3.2 and SDK 3.2).
  
6. INSTALLATION ON KEENELAND


* Be aware what compiler is used and check if gcc
  
  module unload intel/2011.3.174
  module unload PE-intel   # unload programming environment intel
  module load PE-gnu       # load programming environment gnu
  module load gcc/4.1.2    # developed on that compiler

* Open SConstruct and edit variables to the location of cuda, glib 
  and cunit212
 
  CUDA_ROOT = '/sw/keeneland/cuda/3.2/linux_binary/'
  CUNIT212 = '/nics/d/home/smagg/opt/cunit212'
  GLIB20= '/nics/d/home/smagg/opt/glib-2.28.7/'
  
* If scons is missing
  
  wget -c http://prdownloads.sourceforge.net/scons/scons-2.0.1.tar.gz
  module load python/2.7
  tar xfvz scons-2.0.1.tar.gz
  cd scons-2.0.1
  # this installs to the directory you specify
  python setup.py install --prefix=~/opt/scons
  export PATH=~/opt/scons/bin/:$PATH
  
* if driver_types.h and vector_types.h are not found
  
  You need to change path to for CUDA in the following files:
  
  /sw/keeneland/cuda/3.2/linux_binary/
  
  (Set variable CUDA_ROOT in main SConstruct file)
   	
     
7. RUNNING EXAMPLES ON KEENELAND

* allocate the node in the interactive mode

[smagg@kidlogin1 kidron-utils-remote-cuda-exec-2]$ qlogin -I -l nodes=1:ppn=1

* allocate the second node in the interactive mode

[smagg@kidlogin2 kidron-utils-remote-cuda-exec-2]$ qlogin -I -l nodes=1:ppn=1

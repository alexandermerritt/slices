- 2011-10-03
  1. clean up README - currently it is a total mess
  2. add kidron.ini as a file option
  - 2011-05-03, done
  add GLIB variable in the build system; right now it is hard coded
  
- 2011-04-12; 2011-05-02 done
  remove double INIPARSER from the build systems

    You need to update two SConstruct files:
    
    @todo this must be a smarter way to do that
    interposer/SConstruct
    backend/SConstruct
    

IMPLEMENTATION AND FEATURES
--------------------------------------------------------------------------------
Legend
[ ]		not started
[L]		works, but some limitations (noted with feature)
[C]		complete

Updated 2011-11-12

Assembly Runtime
================
	[C] design assembly interface
	[L] implement framework
		[C] starting runtime does self-discovery
		[L] node adds self to participants
			(not yet distributed)
		[L] start assembly composition
	- shared memory library
		[C] "libregistration" - now obsolete
		[C] multi-process-aware
		[C] multi-threading-aware
		[C] self-contained library
		[ ] verify with multiple simultaneous members joining/leaving
		[ ] verify with one multi-threaded member making/destroying regions

	[C] support multiple fat binaries

	- network API (Magda)
		[L] IB
			some bugs at the moment
		[C] sockets
		[C] single library

	- distributed assembly (Alex)
		[ ] assembly RPC thread
		[ ] [support executing apps on nodes w/o GPUs]
		[ ] implement separation of local/remote assembly interfaces
		[ ] add use of monitoring API to assembly composition
		[ ] duplicate register calls across nodes in assembly

	- remote data paths (Alex w/ network API)
		[ ] duplicate hidden CUDA register calls across nodes in assembly
		[ ] what is local:remote sink process configuration?

	[ ] incorporate notion of groups in assemblies, for MPI apps (Alex)

	[ ] multi-threaded backend processes (Alex)
		[ ] needed to perform scheduling, and to support multi-threaded apps

	[ ] scheduling interface (Dipanjan)

Monitoring
==========
	[ ] Design data structure(s) for exporting Lynx data (Naila)
	[ ] glue Lynx and local monitor with shmgrp (Naila + Alex)
	[ ] push Lynx data from local->global monitor (Alex + Magda)
	[ ] design API to access all of monitoring data (Naila + Alex)
	[ ] build library code to expose this API (Alex + Naila)
	[ ] glue global monitor and library with shmgrp (Alex + Naila)

Other details
=============
	[ ]	registered variables (the symbols) are assumed at the moment to be
		memory addresses; the runtime says they may also be strings: remove this
		assumption
			libci.c : cudaMemcpy[To|From]Symbol
			localsink.c : nv_exec_pkt

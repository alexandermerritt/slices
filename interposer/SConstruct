#! /usr/bin/env python

"""@file SConstruct
   @author Magdalena Slawinska magg@gatech.edu
   @author Alex Merritt, merritt.alex@gatech.edu
   @date 2011-02-15
   @brief Building the interposer
"""

# LIBS - A list of one or more libraries that will be linked with 
# any executable programs created by this environment.
# LIBPATH - The list of directories that will be searched for libraries.
# CPPPATH  - The $CPPPATH value tells SCons to look in the current 
#   directory ('.') for any files included by C source files (.c or .h files)

import os
import commands
import sys

Import( 'CUDA_ROOT', 
        'CUNIT212', 
        'GLIB20' )

nodename = commands.getoutput('uname -n')
   
# for glib options run: glib-config --cflags  for glib1.2 
# glib2 lacks this thing

if nodename.startswith('prost') :
    interposerEnv = Environment(
     LIBS = ['rt', 'dl', 
             'glib-2.0'],
     LIBPATH = [CUDA_ROOT + 'lib64', 
       GLIB20 + 'lib', 
       '/lib64'],
     CPPPATH = [
        '.',
        CUDA_ROOT + 'include', 
        '../include', 
        '../remote',
        '../backend',
        GLIB20 + 'include/glib-2.0',
        GLIB20 + 'include/gio-unix-2.0',
        GLIB20 + 'lib/glib-2.0/include'],                                
     CCFLAGS = ['-fPIC', '-g', '-Wall', '-Wextra', '-std=gnu99'] )
elif nodename.startswith('shiva') :
    interposerEnv = Environment(
     LIBS = ['rt', 'dl', 
             'glib-2.0'],
     LIBPATH = [CUDA_ROOT + 'lib64', '/lib64'],
     CPPPATH = [
        '.',
        CUDA_ROOT + 'include', 
        '../include', 
        '../remote',
        '../backend',
        '/usr/include/glib-2.0',
        '/usr/lib/glib-2.0/include'
        ],
     CCFLAGS = ['-fPIC', '-g', '-Wall', '-Wextra', '-std=gnu99'] )
elif nodename.startswith('ifrit') :
    interposerEnv = Environment(
     LIBS = ['rt', 'dl', 
             'glib-2.0'],
     LIBPATH = [CUDA_ROOT + 'lib64', '/lib64'],
     CPPPATH = [
        '.',
        CUDA_ROOT + 'include', 
        '../include', 
        '../remote',
        '../backend',
        '/usr/include/glib-2.0',
        '/usr/lib/glib-2.0/include'
        ],
     CCFLAGS = ['-fPIC', '-g', '-Wall', '-Wextra', '-std=gnu99'] )
else :
    print "Define build variables for this host in interposer/SConstruct"
    sys.exit()

# create a shared library                                         
interposerEnv.SharedLibrary('libci.so', 
    [ 'libci.c',
      'libciutils.c', 
      '../include/kidron_common_f.c',
	  '../common/libregistration.c'
	])
                                                                        
# building tests
#if nodename.startswith('prost') :
#    envTest = Environment(
#      LIBS = ['cunit', 'ncurses', 'pthread', 'glib-2.0'],
#      LIBPATH= [CUNIT212 + 'lib', '.', GLIB20 + 'lib'],
#      CPPPATH= [CUNIT212 + 'include',
#                CUDA_ROOT + 'include',
#                '../include',
#                '../remote', 
#                '../backend',
#                GLIB20 + 'include/glib-2.0',
#                GLIB20 + 'include/gio-unix-2.0',
#                GLIB20 + 'lib/glib-2.0/include'],
#      CCFLAGS = ['-Wall', '-Wextra', '-g', '-std=gnu99'] )
#elif nodename.startswith('shiva') :
#    envTest = Environment(
#      LIBS = ['cunit', 'ncurses', 'pthread', 'glib-2.0'],
#      LIBPATH= ['.'],
#      CPPPATH= [CUDA_ROOT + 'include',
#                '../include',
#                '../remote', 
#                '../backend',
#                '/usr/include/glib-2.0',
#                '/usr/include/gio-unix-2.0',
#                '/usr/lib/glib-2.0/include'],
#      CCFLAGS = ['-Wall', '-Wextra', '-g', '-std=gnu99'] )
#elif nodename.startswith('ifrit') :
#    envTest = Environment(
#      LIBS = ['cunit', 'ncurses', 'pthread', 'glib-2.0'],
#      LIBPATH= ['.'],
#      CPPPATH= [CUDA_ROOT + 'include',
#                '../include',
#                '../remote', 
#                '../backend',
#                '/usr/include/glib-2.0',
#                '/usr/include/gio-unix-2.0',
#                '/usr/lib/glib-2.0/include'],
#      CCFLAGS = ['-Wall', '-Wextra', '-g', '-std=gnu99'] )
#else :
#    print "Define build variables for this machine in interposer/SConstruct"
#    sys.exit()
#
## libci and libciutils should be compiled earlier
#envTest.Program('testLibci', ['testLibci.c', 'libci.so' ])
#                                                        
#envTest.Program('testLibciutils', ['testLibciutils.c', 'libci.so' ])
#
## obviously this doesn't require all libci.so functionality, however
## since there is a mess with dependencies I tried to minimizem, without much
## success. Maybe next time
#envTest.Program('testConnectionListener', ['testConnectionListener.c', 'libci.so'])
#envTest.Program('testConnectionSender', ['testConnectionSender.c', 'libci.so'])
       
